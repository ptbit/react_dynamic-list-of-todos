{"version":3,"sources":["types/Sorted.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Sorted","TodoList","todos","setModalTodoHandler","modalTodo","className","map","todo","todoTitleClass","cn","completed","eyeClass","id","title","type","onClick","TodoFilter","query","setQueryHandler","setSortedHandler","onSubmit","e","preventDefault","onChange","target","value","Active","Completed","All","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","todoUser","setTodoUser","useEffect","userId","data","undefined","href","email","name","App","setTodos","sorted","setSorted","setQuery","setModalTodo","preparedTodos","filter","includes","toLowerCase","preparingTodos","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.896ceab5.chunk.js","sourcesContent":["export enum Sorted {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  setModalTodoHandler: (v:Todo | undefined) => void,\n  modalTodo: Todo | undefined,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos, setModalTodoHandler, modalTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          const todoTitleClass = cn({\n            'has-text-success': todo.completed,\n            'has-text-danger': !todo.completed,\n          });\n\n          const eyeClass = cn('far', {\n            'fa-eye-slash': modalTodo?.id === todo.id,\n            'fa-eye': modalTodo?.id !== todo.id,\n          });\n\n          const selectTodoHandler = (todoForModal:Todo) => {\n            setModalTodoHandler(todoForModal);\n          };\n\n          return (\n            <tr data-cy=\"todo\" key={todo.id}>\n              <td className=\"is-vcentered\">{todo.id}</td>\n\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n\n              <td className=\"is-vcentered is-expanded\">\n                <p className={todoTitleClass}>{todo.title}</p>\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => selectTodoHandler(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={eyeClass} />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Sorted } from '../../types/Sorted';\n\ntype Props = {\n  query: string,\n  setQueryHandler: (query: string) => void,\n  setSortedHandler: (query: Sorted) => void,\n};\n\nexport const TodoFilter:React.FC<Props> = ({\n  query, setQueryHandler, setSortedHandler,\n}) => {\n  const sortedHandler = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    switch (e.target.value) {\n      case 'active':\n        setSortedHandler(Sorted.Active);\n        break;\n      case 'completed':\n        setSortedHandler(Sorted.Completed);\n        break;\n      default:\n        setSortedHandler(Sorted.All);\n    }\n  };\n\n  const handlerChangeFilterQuery = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setQueryHandler(e.target.value);\n  };\n\n  return (\n    <form className=\"field has-addons\" onSubmit={e => e.preventDefault()}>\n      <p className=\"control\">\n        <span className=\"select\">\n          <select data-cy=\"statusSelect\" onChange={sortedHandler}>\n            <option value={Sorted.All}>All</option>\n            <option value={Sorted.Active}>Active</option>\n            <option value={Sorted.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handlerChangeFilterQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query !== '' && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQueryHandler('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState, FC } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  setModalTodoHandler: (v:Todo | undefined) => void,\n  modalTodo: Todo,\n};\n\nexport const TodoModal: FC<Props> = ({\n  setModalTodoHandler, modalTodo,\n}) => {\n  const [todoUser, setTodoUser] = useState<User>();\n\n  useEffect(() => {\n    if (modalTodo) {\n      getUser(modalTodo.userId).then(data => {\n        setTodoUser(data);\n      });\n    }\n  }, [modalTodo]);\n\n  const closeModalHandler = () => {\n    setModalTodoHandler(undefined);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {modalTodo && todoUser ? (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {modalTodo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeModalHandler}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {modalTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {modalTodo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={todoUser.email}>\n                {todoUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      ) : (\n        <Loader />\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport { useEffect, useState, FC } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Sorted } from './types/Sorted';\n\nconst preparingTodos = (todos:Todo[], query:string, sorted:Sorted) => {\n  switch (sorted) {\n    case Sorted.Active:\n      return (todos.filter(todo => !todo.completed && todo.title.includes(query.toLowerCase())));\n    case Sorted.Completed:\n      return (todos.filter(todo => todo.completed && todo.title.includes(query.toLowerCase())));\n    default:\n      return (todos.filter(todo => todo.title.includes(query.toLowerCase())));\n  }\n};\n\nexport const App: FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [sorted, setSorted] = useState(Sorted.All);\n  const [query, setQuery] = useState('');\n  const [modalTodo, setModalTodo] = useState<Todo | undefined>();\n\n  useEffect(() => {\n    getTodos().then(data => {\n      setTodos(data);\n    });\n  }, []);\n\n  const preparedTodos = preparingTodos(todos, query, sorted);\n\n  const setModalTodoHandler = (value:Todo | undefined) => {\n    setModalTodo(value);\n  };\n\n  const setQueryHandler = (value:string) => {\n    setQuery(value);\n  };\n\n  const setSortedHandler = (value:Sorted) => {\n    setSorted(value);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter query={query} setQueryHandler={setQueryHandler} setSortedHandler={setSortedHandler} />\n            </div>\n\n            <div className=\"block\">\n              {\n                todos.length === 0 ? (\n                  <Loader />\n                ) : (\n                  <TodoList todos={preparedTodos} setModalTodoHandler={setModalTodoHandler} modalTodo={modalTodo} />\n                )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {modalTodo && <TodoModal setModalTodoHandler={setModalTodoHandler} modalTodo={modalTodo} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}