{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","setModalTodoHandler","modalTodo","className","map","todo","todoTitleClass","cn","completed","eyeClass","id","title","type","onClick","TodoFilter","query","setQueryHandler","setSortedHandler","onSubmit","e","preventDefault","onChange","target","value","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","todoUser","setTodoUser","useEffect","userId","data","undefined","href","email","name","App","setTodos","preparedTodos","setPreparedTodos","sorted","setSorted","setQuery","setModalTodo","filter","includes","toLowerCase","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea406e5b.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  setModalTodoHandler: (v:Todo | undefined) => void,\n  modalTodo: Todo | undefined,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos, setModalTodoHandler, modalTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          const todoTitleClass = cn({\n            'has-text-success': todo.completed,\n            'has-text-danger': !todo.completed,\n          });\n\n          const eyeClass = cn('far', {\n            'fa-eye-slash': modalTodo?.id === todo.id,\n            'fa-eye': modalTodo?.id !== todo.id,\n          });\n\n          const selectTodoHandler = (todoForModal:Todo) => {\n            setModalTodoHandler(todoForModal);\n          };\n\n          return (\n            <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n              <td className=\"is-vcentered\">{todo.id}</td>\n\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n\n              <td className=\"is-vcentered is-expanded\">\n                <p className={todoTitleClass}>{todo.title}</p>\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => selectTodoHandler(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={eyeClass} />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  query: string,\n  setQueryHandler: (query: string) => void,\n  setSortedHandler: (query: string) => void,\n};\n\nexport const TodoFilter:React.FC<Props> = ({\n  query, setQueryHandler, setSortedHandler,\n}) => {\n  const sortedHandler = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setSortedHandler(e.target.value);\n  };\n\n  const handlerChangeFilterQuery = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setQueryHandler(e.target.value);\n  };\n\n  return (\n    <form className=\"field has-addons\" onSubmit={e => e.preventDefault()}>\n      <p className=\"control\">\n        <span className=\"select\">\n          <select data-cy=\"statusSelect\" onChange={sortedHandler}>\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handlerChangeFilterQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query !== '' && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQueryHandler('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState, FC } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  setModalTodoHandler: (v:Todo | undefined) => void,\n  modalTodo?: Todo,\n};\n\nexport const TodoModal: FC<Props> = ({\n  setModalTodoHandler, modalTodo,\n}) => {\n  const [todoUser, setTodoUser] = useState<User>();\n\n  useEffect(() => {\n    if (modalTodo) {\n      getUser(modalTodo.userId).then(data => {\n        setTodoUser(data);\n      });\n    }\n  }, [modalTodo]);\n\n  const closeModalHandler = () => {\n    setModalTodoHandler(undefined);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {modalTodo && todoUser ? (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {modalTodo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeModalHandler}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {modalTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {modalTodo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={todoUser?.email}>\n                {todoUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      ) : (\n        <Loader />\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport { useEffect, useState, FC } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nexport const App: FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [preparedTodos, setPreparedTodos] = useState<Todo[]>([]);\n  const [sorted, setSorted] = useState('');\n  const [query, setQuery] = useState('');\n  const [modalTodo, setModalTodo] = useState<Todo | undefined>();\n\n  useEffect(() => {\n    getTodos().then(data => {\n      setTodos(data);\n      setPreparedTodos(data);\n    });\n  }, []);\n\n  useEffect(() => {\n    const preparingTodos = () => {\n      if (sorted === 'active') {\n        setPreparedTodos(todos.filter(todo => !todo.completed && todo.title.includes(query.toLowerCase())));\n      } else if (sorted === 'completed') {\n        setPreparedTodos(todos.filter(todo => todo.completed && todo.title.includes(query.toLowerCase())));\n      } else {\n        setPreparedTodos(todos.filter(todo => todo.title.includes(query.toLowerCase())));\n      }\n    };\n\n    preparingTodos();\n  }, [query, sorted, todos]);\n\n  const setModalTodoHandler = (value:Todo | undefined) => {\n    setModalTodo(value);\n  };\n\n  const setQueryHandler = (value:string) => {\n    setQuery(value);\n  };\n\n  const setSortedHandler = (value:string) => {\n    setSorted(value);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter query={query} setQueryHandler={setQueryHandler} setSortedHandler={setSortedHandler} />\n            </div>\n\n            <div className=\"block\">\n              {\n                todos.length === 0 ? (\n                  <Loader />\n                ) : (\n                  <TodoList todos={preparedTodos} setModalTodoHandler={setModalTodoHandler} modalTodo={modalTodo} />\n                )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {modalTodo && <TodoModal setModalTodoHandler={setModalTodoHandler} modalTodo={modalTodo} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}